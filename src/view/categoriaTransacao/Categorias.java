/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view.categoriaTransacao;

import controller.CategoriaTransacaoController;
import view.transacao.*;
import controller.TransacaoController;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.Iterator;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import model.CategoriaTransacao;
import model.Transacao;
import view.ButtonColumn;
import view.RenderizadorTransacao;
import view.usuario.MeuEscritorio;
import view.usuario.TelaInicial;

/**
 *
 * @author victor
 */
public class Categorias extends javax.swing.JInternalFrame {


    private CategoriaTransacaoController categoriaController;
    
    public Categorias() {
        initComponents();
        preencheTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setClosable(true);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setText("Categorias de Transações");

        jTable1.setBackground(new java.awt.Color(254, 254, 254));
        jTable1.setDefaultRenderer(Object.class, new view.RenderizadorCategoria());
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Cor", "Orçamento", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setFocusable(false);
        jTable1.setRowSelectionAllowed(false);
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 851, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                .addGap(47, 47, 47))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
 
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    
public void preencheTabela(){
        
        final DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        try {
            categoriaController = new CategoriaTransacaoController();
            Iterator it = categoriaController.toList(MeuEscritorio.usuarioLogado.email).iterator();
            CategoriaTransacao t;
            
            while(it.hasNext()){
                
                t = (CategoriaTransacao) it.next();
                
                model.addRow(new Object[]{t.id,t.nome,"",t.orcamento,"Atualizar", "Deletar"});
            }
            
            Action delete = new AbstractAction(){
                public void actionPerformed(ActionEvent e){
                    JTable table = (JTable)e.getSource();
                    int modelRow = Integer.valueOf( e.getActionCommand() );
                    
                    int coluna = 0;
                    Object obj = jTable1.getValueAt(jTable1.getSelectedRow(),coluna); 
                    int id = (Integer) obj;
                    try {
                        categoriaController.remover(id,MeuEscritorio.usuarioLogado.email);
                        JOptionPane.showMessageDialog(null, "Categoria removida com sucesso");
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex.getMessage());
                    }
                    
                    
                    ((DefaultTableModel)table.getModel()).removeRow(modelRow);
                }
            };
            
           Action atualizar = new AbstractAction(){
                public void actionPerformed(ActionEvent e){
                    JTable table = (JTable)e.getSource();
                    int modelRow = Integer.valueOf( e.getActionCommand() );
                    Transacao t = null;
                    
                    int coluna = 0;
                    Object obj = jTable1.getValueAt(jTable1.getSelectedRow(),coluna); 
                    int id = (Integer) obj;
                    try {
                        EditarCategoria editar = new EditarCategoria(id);
                        MeuEscritorio.jDesktopPane1.add(editar);
                        editar.setMaximum(true);
                        editar.setVisible(true);
                        dispose();
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex.getMessage());
                    }

                }
            };
            
            ButtonColumn buttonColumn = new ButtonColumn(jTable1,atualizar, 4);
            ButtonColumn buttonColumn2 = new ButtonColumn(jTable1,delete, 5);
            buttonColumn.setMnemonic(KeyEvent.VK_D);
            buttonColumn2.setMnemonic(KeyEvent.VK_D);
            
        } catch (Exception e) {
        }
    }




}
